{"version":3,"sources":["interfaces/user.js"],"names":["UserInterface","username","params","Error","http","get","then","body","payload"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;IAGqBA,a;;;;;;;;;;;;;4BACTC,Q,EAAUC,M,EAAQ;AACtB,UAAG,CAAC,wBAAUD,QAAV,CAAJ,EAAyB;AACrB,cAAM,IAAIE,KAAJ,CAAU,qDAAV,CAAN;AACH,OAHqB,CAKtB;;;AACA,aAAO,KAAKC,IAAL,CAAUC,GAAV,CAAc,UAAUJ,QAAV,GAAqB,UAAnC,EAA+C;AAClDC,gBAAQA;AAD0C,OAA/C,EAEJI,IAFI,CAEC,UAASC,IAAT,EAAe;AACnB,YAAG,wBAAUA,IAAV,KAAmB,wBAAUA,KAAKC,OAAf,CAAtB,EAA+C;AAC3C,iBAAOD,KAAKC,OAAZ;AACH;;AAED,eAAO,IAAP;AACH,OARM,CAAP;AASH","file":"user.js","sourcesContent":["import Interface from './base';\r\nimport {isDefined} from '../core/helpers';\r\n\r\n\r\nexport default class UserInterface extends Interface {\r\n    listens(username, params) {\r\n        if(!isDefined(username)) {\r\n            throw new Error('Invalid value provided for the \"username\" parameter');\r\n        }\r\n\r\n        // Send request\r\n        return this.http.get('user/' + username + '/listens', {\r\n            params: params\r\n        }).then(function(body) {\r\n            if(isDefined(body) && isDefined(body.payload)) {\r\n                return body.payload;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    }\r\n}\r\n"]}